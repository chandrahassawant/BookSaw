@model IEnumerable<BulkyWeb.Models.Product>

@{
    ViewData["Title"] = "Product List";
}

<link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css" rel="stylesheet" />

<div class="container">
    <div class="row flex-lg-nowrap">
        <div class="col">
            <div class="row flex-lg-nowrap">
                <div class="col mb-3">
                    <div class="e-panel card">
                        <div class="card-body">
                            <div class="card-title">
                                <!-- Optionally, you can add a card title here -->
                            </div>
                            <div class="e-table">
                                <div class="table-responsive table-lg mt-3">
                                    <table class="table table-bordered">
                                        <thead class="text-center">
                                            <tr>
                                                <th class="text-center align-middle">Product ID</th>
                                                <th class="text-center align-middle">ISBN</th>
                                                <th class="text-center align-middle">Stock</th>
                                                <th class="text-center align-middle">Created Date</th>
                                                <th class="text-center align-middle">Availability</th>
                                                <th class="text-center align-middle">Actions</th>
                                            </tr>
                                        </thead>
                                        <tbody class="text-center">
                                            @foreach (var client in Model)
                                            {
                                                <tr id="client-@client.ProductId">
                                                    <td class="text-center align-middle">@client.ProductId</td>
                                                    <td class="text-center align-middle">@client.ISBN</td>
                                                    <td class="text-center align-middle">@client.Stock</td>
                                                    <td class="text-center align-middle">
                                                        <span>@client.CreatedDate.ToString("dd MMM yyyy")</span>
                                                    </td>
                                                    <td class="text-center align-middle">@client.IsAvailable</td>
                                                    <td class="text-center align-middle">
                                                        <div class="btn-group align-top">
                                                            <button class="btn btn-sm btn-outline-secondary badge"
                                                                type="button" style="width: 50px; color: black;"
                                                                onclick="enableEdit('@client.ProductId')">
                                                                EDIT
                                                            </button>
                                                            <button class="btn btn-sm btn-outline-secondary badge"
                                                                type="button" style="width: 50px; color: black;"
                                                                onclick="deleteClient('@client.ProductId')">
                                                                <i class="fa fa-trash"></i>
                                                            </button>
                                                            @if (!client.IsAvailable)
                                                            {
                                                                <button class="btn btn-sm btn-outline-secondary badge"
                                                                    type="button" style="width: 90px; color: black;"
                                                                    onclick="enableClient('@client.ProductId')">
                                                                    <i class="fa fa-check"></i> In Stock
                                                                </button>
                                                            }
                                                        </div>
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                    <button class="btn btn-sm btn-outline-secondary badge"
                                        type="button" onclick="addNew()" style="width: 130px; color: black; margin-top: 10px;">
                                        <i class="fa fa-plus"></i> Add New Book
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://ajax.aspnetcdn.com/ajax/jquery/jquery-3.5.1.min.js"></script>
    <script src="https://ajax.aspnetcdn.com/ajax/jquery.validate/1.19.2/jquery.validate.min.js"></script>
    <script src="https://ajax.aspnetcdn.com/ajax/jquery-validation-unobtrusive/3.2.11/jquery.validate.unobtrusive.min.js"></script>
    <script>
        function deleteClient(ProductId) {
            if (confirm("Are you sure you want to delete this product?")) {
                $.ajax({
                    url: '/Product/Delete',
                    type: 'POST',
                    data: {
                        ProductId: ProductId,
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function (response) {
                        if (response.success) {
                            alert(response.message);
                            location.reload(); // Reload the page to reflect changes
                        } else {
                            alert('Error: ' + response.message);
                        }
                    },
                    error: function () {
                        alert('An error occurred while processing your request.');
                    }
                });
            }
        }

        function enableClient(ProductId) {
            if (confirm("Mark this product as in stock?")) {
                $.ajax({
                    url: '/Product/Enable',
                    type: 'POST',
                    data: {
                        ProductId: ProductId,
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function (response) {
                        if (response.success) {
                            alert(response.message);
                            location.reload(); // Reload the page to reflect changes
                        } else {
                            alert('Error: ' + response.message);
                        }
                    },
                    error: function () {
                        alert('An error occurred while processing your request.');
                    }
                });
            }
        }

        function enableEdit(ProductId) {
            window.location.href = '/Product/EditProduct/' + ProductId;
        }

        function addNew() {
            window.location.href = '/Product/AddNewBook';
        }
    </script>
}
